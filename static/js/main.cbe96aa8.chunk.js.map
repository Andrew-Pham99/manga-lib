{"version":3,"sources":["api.js","images/logo.png","components/components.js","App.js","MangaInfo.js","Reader.js","NotFound.js","AdvancedSearch.js","About.js","Routes.js","index.js","../node_modules/typescript/lib sync"],"names":["base_url","api","getRandomManga","console","log","axios","method","url","params","includes","responseType","queryManga","queryParams","orderType","order","relevance","title","followedCount","limit","paramsSerializer","qs","stringify","getManga","id","getCoverArtList","coverIds","ids","getChapterList","translatedLanguage","chapter","contentRating","getCoverArt","coverId","getBaseUrl","chapterID","getChapterImgUrl","baseUrl","qualityMode","chapterHash","fileName","getTags","ch_limit","components","SearchBar","onChange","placeholder","onClick","onClickRand","onKeyDown","history","useHistory","className","Container","size","type","Button","variant","push","onMouseDown","event","button","window","open","TopNavBar","React","useState","status","publicationDemographic","includedTags","excludedTags","searchObject","setSearchObject","useEffect","Navbar","expand","to","Brand","Image","src","logo","Form","onSubmit","pathname","state","Row","Col","Group","controlId","Control","name","e","target","value","lg","localStorage","setItem","JSON","rand","TopBar","LoadingSpinner","align","Spinner","animation","role","AboutUs","fluid","MangaCard","props","vis","setVis","handleMangaClick","handleMouseDown","Card","style","visibility","Img","img","alt","width","height","onLoad","Body","Title","Text","description","key","initialSearchState","context","useLocation","loadObject","setLoadObject","responseData","setResponseData","offset","setOffset","showButton","setShowButton","spinner","setSpinner","handleRand","then","response","data","relationships","forEach","relationship","attributes","catch","error","handleInput","ord","length","total","result","replaceState","document","Grid","container","spacing","item","md","justifyContent","map","index","en","jp","coverFile","replace","demographic","tags","concat","marginBottom","App","undefined","parse","getItem","removeItem","marginTop","Info","author","artist","themes","genres","format","tagId","themeId","genreId","formatId","authId","artId","element","tag","group","handleSearch","sm","fontSize","Subtitle","charAt","toUpperCase","slice","auth","margin","ChapterListNav","chapterList","setChapterList","pageLength","setPageLength","currentPage","setCurrentPage","pageVis","setPageVis","bottomPageVis","setBottomPageVis","noChapters","setNoChapters","totalChapters","remainingChaptersToFetch","chaptersFetched","totalOffset","manga","getChapterListResponse","listId","i","thisOffset","nextChapterListResponse","Math","ceil","sort","a","b","aChapter","parseFloat","bChapter","chapterSort","pageLengthVal","handlePageClick","selectedPage","selected","previousLabel","nextLabel","breakLabel","breakClassName","initialPage","marginPagesDisplayed","pageRangeDisplayed","pageCount","forcePage","containerClassName","onPageChange","subContainerClassName","activeClassName","disableInitialCallback","Nav","Item","curChapter","handleChapterChange","Link","ApiInfo","loading","setLoading","err","setErr","mInfo","setMInfo","match","RegExp","exec","location","im","color","MangaInfo","FindNextChapter","idx","FindPrevChapter","HandleChapterChange","newChapter","HandleChapterChangeNewTab","goToMangaInfo","ChapterImages","chapterImgUrlList","setChapterImgUrlList","isScroll","setIsScroll","curPage","setCurPage","scrollZoom","setScrollZoom","pageZoom","setPageZoom","showZoom","setShowZoom","vh","min","documentElement","clientWidth","innerWidth","innerHeight","pageZoomVal","scrollZoomVal","useLayoutEffect","chapterId","getBaseUrlResponse","chapterImg","hash","ZoomBar","marginLeft","marginRight","Label","Range","max","defaultValue","step","tooltip","ChapterScroll","getElementById","scrollIntoView","xs","threshold","clientX","handleClick","userSelect","ChapterProgress","showProgress","setShowProgress","onMouseEnter","onMouseLeave","ChapterClick","onkeydown","keyCode","ctrlKey","nextImage","prevImage","goToMangaInfoNewTab","textAlign","NextChapterButtons","ChapterListHamburgerMenu","right","pageWrapId","outerContainerId","activeKey","as","eventKey","Reader","NotFound","AdvancedSearchFields","genreTags","setGenreTags","themeTags","setThemeTags","formatTags","setFormatTags","contentTags","setContentTags","tagsFetched","setTagsFetched","aName","bName","handleStatusChange","checked","filter","handleDemoChange","handleContentChange","handleIncludedTagChange","getAttribute","handleExcludedTagChange","Check","label","inline","tagid","AdvancedSearch","About","ListGroup","preventDefault","href","Routes","exact","path","ReactDOM","render","StrictMode","webpackEmptyContext","req","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.cbe96aa8.chunk.js","sourcesContent":["import axios from \"axios\"\r\nimport qs from \"qs\"\r\n/*\r\nGlobal rate limit of 5 requests a second per IP address in affect for most requests.\r\nOptimal to use larger batch requests than smaller individual ones.\r\n*/\r\n\r\nconst base_url = 'https://api.mangadex.org'\r\nconst limit = 30;\r\nconst ch_limit = 25;\r\n/**\r\n * @returns {Promise} GET response as a Promise\r\n */\r\n    const getRandomManga = () =>{\r\n        console.log(\"executing GET request for random manga...\")\r\n        return axios({\r\n            method: 'get',\r\n            url: base_url + '/manga/random',\r\n            params: {includes:[\"author\", \"artist\", \"cover_art\", \"tags\"]},\r\n            responseType: 'json'\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Object} queryParams \r\n     * @returns {Promise} GET response as a Promise\r\n     */\r\n    const queryManga = (queryParams, orderType =\"\") => {\r\n        console.log(\"executing GET request for queried manga...\")\r\n        let order = {relevance: \"desc\"}\r\n        if (orderType === \"\") {\r\n            if(!queryParams || queryParams.title === \"\"){\r\n                order = {followedCount: \"desc\"}\r\n            }\r\n        }\r\n        else {\r\n            order = {[orderType]: \"desc\"}\r\n        }\r\n        \r\n        return axios({\r\n            method: 'get',\r\n            url: base_url + '/manga',\r\n            responseType: 'json',\r\n            \r\n            params: {\r\n                limit: limit,\r\n                includes:[\"author\", \"artist\", \"cover_art\", \"tags\"],\r\n                \r\n                order: order,\r\n                ...queryParams\r\n            },\r\n            paramsSerializer: params => {\r\n                return qs.stringify(params)\r\n              }\r\n        })\r\n    }\r\n\r\n    const getManga = (id) => {\r\n        console.log(\"executing GET request for queried manga...\")\r\n        return axios({\r\n            method:'get',\r\n            url: base_url + `/manga/${id}`,\r\n            responseType: 'json',\r\n            params: {\r\n                includes:[\"author\", \"artist\", \"cover_art\", \"tags\"]\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Array} coverIds - Array of cover ids\r\n     * @returns {Promise} GET response as a Promise containing cover art files\r\n     */\r\n    const getCoverArtList = (coverIds) => {\r\n        console.log(\"executing GET request for cover art...\")\r\n        return axios({\r\n            method: 'get',\r\n            url: base_url + '/cover',\r\n            responseType: 'json',\r\n            params: {\r\n                limit: limit,\r\n                ids: coverIds\r\n            }\r\n        })\r\n    }\r\n\r\n    const getCoverArt = (coverId) => {\r\n        console.log(\"executing GET request for cover art\")\r\n        return axios({\r\n            method: 'get',\r\n            url: base_url + '/cover/' + coverId,\r\n            responseType: 'json'\r\n        })\r\n    }\r\n\r\n\r\n    /* Retrieving pages from the MangaDex@home Network\r\n    *  Four fields required to retrieve chapter image\r\n    *  .data.id                    -  API Chapter ID\r\n    *  .data.attributes.hash       -  MangaDex@home Chapter Hash\r\n    *  .data.attributes.data       -  data quality mode filenames\r\n    *  .data.attributes.dataSaver  -  data-saver quality mode filenames\r\n    * \r\n    *  If the server you have been assigned fails to serve images, you are allowed to call the \r\n    *  /at-home/server/{ chapter id } endpoint again to get another server.\r\n    */\r\n    \r\n\r\n    /**\r\n     * \r\n     * @param {Array} queryParams \r\n     * @returns {Promise} GET response as a Promise \r\n     * \r\n     */\r\n\r\n    //  {\r\n    //    ...,\r\n    //    \"data\": {\r\n    //      \"id\": \"e46e5118-80ce-4382-a506-f61a24865166\",\r\n    //      ...,\r\n    //      \"attributes\": {\r\n    //        ...,\r\n    //        \"hash\": \"e199c7d73af7a58e8a4d0263f03db660\",\r\n    //        \"data\": [\r\n    //          \"x1-b765e86d5ecbc932cf3f517a8604f6ac6d8a7f379b0277a117dc7c09c53d041e.png\",\r\n    //          ...\r\n    //        ],\r\n    //        \"dataSaver\": [\r\n    //          \"x1-ab2b7c8f30c843aa3a53c29bc8c0e204fba4ab3e75985d761921eb6a52ff6159.jpg\",\r\n    //          ...\r\n    //        ]\r\n    //      }\r\n    //    }\r\n    //  }\r\n\r\n    //limit:100 def\r\n    const getChapterList = (queryParams) => {\r\n        console.log(\"executing GET request for chapter lists...\")\r\n\r\n        return axios({\r\n            method: 'get',    \r\n            url: base_url + '/chapter',\r\n            responseType:'json',\r\n            \r\n            params: {\r\n                limit: 100,\r\n                translatedLanguage: ['en'],\r\n                order: {\r\n                    chapter: 'asc'\r\n                   },\r\n                contentRating:[\"safe\", \"suggestive\", \"erotica\" , \"pornographic\"],\r\n                ...queryParams\r\n            },\r\n            paramsSerializer: params => {\r\n                return qs.stringify(params)\r\n              }\r\n        })\r\n    }\r\n    //order['chapter'] = asc\r\n    \r\n    /**\r\n     * @param {string} chapterID\r\n     * @returns {Promise} GET response as a Promise \r\n     * \r\n     */\r\n    \r\n    // {\r\n    //     \"baseUrl\" : \"string\"\r\n    // }\r\n\r\n    const getBaseUrl = (chapterID) => {\r\n        return axios({\r\n            method: 'get',\r\n            url: base_url + `/at-home/server/${chapterID}`,\r\n            responseType: 'json'\r\n        })\r\n    }\r\n\r\n    const getTags = () => {\r\n        return axios({\r\n            method: 'get',\r\n            url: base_url + `/manga/tag`,\r\n            responseType: 'json'\r\n        })\r\n    };\r\n\r\n\r\n    /**\r\n     * qualityMode = {'data', 'dataSaver'}\r\n     * @returns {string} Image Url for corresponding Chapter\r\n     */\r\n    \r\n    const getChapterImgUrl = (baseUrl, qualityMode, chapterHash, fileName) => {\r\n        return `${baseUrl}/${qualityMode}/${chapterHash}/${fileName}`\r\n    }\r\n\r\n\r\n\r\n    const api = {\r\n        getRandomManga,\r\n        queryManga,\r\n        getManga,\r\n        getCoverArtList,\r\n        getChapterList,\r\n        getCoverArt,\r\n        getBaseUrl,\r\n        getChapterImgUrl,\r\n        getTags,\r\n        limit,\r\n        ch_limit\r\n    };\r\n\r\n    export default api;\r\n    ","export default __webpack_public_path__ + \"static/media/logo.045c5b4f.png\";","import React from \"react\";\r\nimport {Navbar, Container, Button, Image, Form, Row, Col, Spinner} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\"\r\nimport {useHistory, Link} from \"react-router-dom\";\r\nimport logo from \"../images/logo.png\";\r\nimport '../css/components.css';\r\nimport '../css/standard_styles.css'\r\n\r\nconst SearchBar = ({onChange, placeholder, onClick, onClickRand, onKeyDown}) => {\r\n    const history = useHistory();\r\n    const gotoAdvancedSearch = () => {\r\n        history.push(`/AdvancedSearch`);\r\n    };\r\n    const gotoAdvancedSearchNewTab = (event) => {\r\n        if(event.button === 1){\r\n            window.open(`/AdvancedSearch`);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className={\"search-bar\"}>\r\n            <Container className={\"w-50\"}>\r\n                <input\r\n                    size={75}\r\n                    className={\"search-bar-field form-control\"}\r\n                    type={\"text\"}\r\n                    onChange={onChange}\r\n                    placeholder={placeholder}\r\n                    onKeyDown={onKeyDown}\r\n                />\r\n            </Container>\r\n            <br/>\r\n            <Button onClick={onClick} type=\"submit\" className={\"button-themed button-format\"}>Search</Button>\r\n            <Button onClick={onClickRand} type=\"submit\" className={\"button-themed button-format\"}>Random</Button>\r\n            <Button variant={\"secondary\"} onClick={gotoAdvancedSearch} onMouseDown={gotoAdvancedSearchNewTab} className={\"button-format\"}>Advanced Search</Button>\r\n        </div>\r\n    );\r\n  };\r\n\r\nconst TopBar = () => {\r\n    return (\r\n      <div>\r\n          <Container className={\"row nowrap d-inline-block position-relative\"}>\r\n              <Navbar expand={\"lg\"} className={\"top-bar\"}>\r\n                  <LinkContainer to={\"/\"}>\r\n                      <Navbar.Brand className={\"text\"}>\r\n                          <Image\r\n                              src={logo}\r\n                              className={\"image\"}\r\n                          />\r\n                          Manga Lib\r\n                      </Navbar.Brand>\r\n                  </LinkContainer>\r\n              </Navbar>\r\n          </Container>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst TopNavBar = () => {\r\n    const initialSearchState = {\r\n        title:\"\",\r\n        status:[],\r\n        publicationDemographic:[],\r\n        includedTags:[],\r\n        excludedTags:[\"b13b2a48-c720-44a9-9c77-39c9979373fb\"],\r\n        contentRating:[]\r\n    };\r\n    const history = useHistory();\r\n    const [searchObject, setSearchObject] = React.useState(initialSearchState);\r\n    const gotoAdvancedSearch = () => {\r\n        history.push(`/AdvancedSearch`);\r\n    };\r\n    const gotoAdvancedSearchNewTab = (event) => {\r\n        if(event.button === 1){\r\n            window.open(`/AdvancedSearch`);\r\n        }\r\n    };\r\n    const handleChange = (e) => {\r\n        setSearchObject({...searchObject, [e.target.name]: e.target.value});\r\n    };\r\n    const TopNavBarSearch = () => {\r\n        history.push({pathname:`/`, state:{searchObject:searchObject}});\r\n    };\r\n    const TopNavBarSearchNewTab = (event) => {\r\n        if(event.button === 1){\r\n            localStorage.setItem(\"SEARCH_STATE\", JSON.stringify({searchObject:searchObject}));\r\n            window.open(`/`);\r\n        }\r\n    };\r\n    const TopNavBarRandSearch = () => {\r\n        history.push({pathname:`/`, state:{searchObject:{...searchObject, rand: true}}});\r\n    };\r\n    const TopNavBarRandSearchNewTab = (event) => {\r\n        if(event.button === 1){\r\n            localStorage.setItem(\"SEARCH_STATE\", JSON.stringify({searchObject:{...searchObject, rand:true}}));\r\n            window.open(`/`);\r\n        }\r\n    }\r\n    React.useEffect(()=>{console.log(searchObject);},[searchObject])\r\n\r\n    return (\r\n        <div>\r\n            <Container className={\"row nowrap d-inline-block\"}>\r\n                <Navbar expand={\"lg\"} className={\"top-bar\"} >\r\n                    <LinkContainer to={\"/\"}>\r\n                        <Navbar.Brand className={\"text\"}>\r\n                            <Image\r\n                                src={logo}\r\n                                className={\"image\"}\r\n                            />\r\n                            Manga Lib\r\n                        </Navbar.Brand>\r\n                    </LinkContainer>\r\n                    <Form onSubmit={TopNavBarSearch} className={\"flex-fill\"}>\r\n                        <Row>\r\n                            <Col className={\"flex-grow-1\"}>\r\n                                <Form.Group controlId={\"title\"} className={\"flex-fill\"}>\r\n                                    <Form.Control type={\"text\"} name={\"title\"} placeholder={\"Find a Manga!\"} onChange={handleChange} className={\"search-bar-field\"}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                            <Col lg={\"auto\"}>\r\n                                <Button className={\"button-themed\"} type=\"submit\" onMouseDown={TopNavBarSearchNewTab}>Search</Button>\r\n                            </Col>\r\n                            <Col lg={\"auto\"}>\r\n                                <Button className={\"button-themed\"} onClick={TopNavBarRandSearch} onMouseDown={TopNavBarRandSearchNewTab}>Random</Button>\r\n                            </Col>\r\n                            <Col lg={\"auto\"}>\r\n                                <Button variant={\"secondary\"} onClick={gotoAdvancedSearch} onMouseDown={gotoAdvancedSearchNewTab}>Advanced Search</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Navbar>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst AboutUs = () => {\r\n    return (\r\n        <div>\r\n            <Container className={\"fixed-bottom\"} fluid>\r\n                <Link to={`/About`}>\r\n                    <p className={\"aboutUs\"}>About Us</p>\r\n                </Link>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst LoadingSpinner = () => {\r\n    return (\r\n        <Container align={\"center\"}>\r\n            <Spinner animation={\"border\"} role={\"status\"} className={\"spinner-themed\"}>\r\n                <span className={\"visually-hidden\"}>Loading...</span>\r\n            </Spinner>\r\n        </Container>\r\n    );\r\n};\r\n\r\nconst components = {SearchBar, TopNavBar, TopBar, LoadingSpinner, AboutUs}\r\nexport default components;","import './css/App.css';\r\nimport './css/standard_styles.css'\r\nimport React from 'react';\r\nimport api from './api';\r\nimport components from './components/components';\r\nimport {Container, Button, Card} from \"react-bootstrap\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport {useLocation, useHistory} from 'react-router-dom';\r\n\r\nfunction MangaCard(props){\r\n    const [vis, setVis] = React.useState(false)\r\n    const history = useHistory();\r\n\r\n    const onLoad = () => {\r\n        setVis(true)\r\n    };\r\n\r\n    const handleMangaClick = () => {\r\n        history.push({pathname:`/Info/manga=${props.id}`, state:props})\r\n    };\r\n\r\n    const handleMouseDown = (event) => {\r\n        console.log(event)\r\n        if(event.button === 1){\r\n            localStorage.setItem(\"MANGAINFO_STATE\", JSON.stringify(props));\r\n            window.open(`/Info/manga=${props.id}`);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <Card style={vis ? {} : {visibility:\"visible\"}} key={props.key} id={props.id} className={\"manga-card\"}>\r\n            <Card.Img variant={\"top\"} src={props.img} alt={\"No Image Found\"} className={\"thumbnail clickable\"} width={100} height={550} onLoad={onLoad} onClick={handleMangaClick} onMouseDown={handleMouseDown}/>\r\n            <Card.Body>\r\n                <Card.Title onClick={handleMangaClick} onMouseDown={handleMouseDown} className={\"clickable manga-card-text color\"}>\r\n                    {props.title}\r\n                </Card.Title>\r\n                <Card.Text className={\"manga-card-text color\"}>\r\n                    <div className={\"format\"}>\r\n                        <p>{props.description}</p>\r\n                    </div>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n \r\n    );\r\n}\r\n\r\nfunction SearchBar(){\r\n    const initialSearchState = {\r\n        title:\"\",\r\n        status:[],\r\n        publicationDemographic:[],\r\n        includedTags:[],\r\n        excludedTags:[\"b13b2a48-c720-44a9-9c77-39c9979373fb\"],\r\n        contentRating:[]\r\n    };\r\n    const context = useLocation()\r\n    const [searchObject, setSearchObject] = React.useState(initialSearchState);\r\n    const [loadObject, setLoadObject] = React.useState(initialSearchState)\r\n    const [responseData, setResponseData] = React.useState([]);\r\n    const [offset, setOffset] = React.useState(api.limit);\r\n    const [showButton, setShowButton] = React.useState(false);\r\n    const [spinner, setSpinner] = React.useState(false);\r\n\r\n    const handleChange = e => {\r\n        setSearchObject({...searchObject, title: e.target.value});\r\n    }\r\n\r\n    const handleRand = () => {\r\n        setSpinner(true)\r\n        setShowButton(false);\r\n        api.getRandomManga()\r\n        .then((response) => {\r\n            console.log(response)\r\n            response.data.data.relationships.forEach(relationship => {\r\n                if (relationship.type === \"cover_art\") {\r\n                    response.data.data[\"coverFile\"] = `https://uploads.mangadex.org/covers/${response.data.data.id}/${relationship.attributes.fileName}`;\r\n                }\r\n            });\r\n            setResponseData([response.data.data]);\r\n            setSpinner(false)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        });\r\n    }\r\n\r\n    const handleInput = () => {\r\n        setSpinner(true)\r\n        setOffset(api.limit)\r\n        setShowButton(false)\r\n        let ord = \"\"\r\n        setLoadObject(context.state != null ? (context.state.searchObject != null ? context.state.searchObject : searchObject) : searchObject)\r\n        if(context.state!= null && context.state.order){\r\n            ord = context.state.order\r\n        }\r\n\r\n        api.queryManga(context.state != null ? (context.state.searchObject != null ? context.state.searchObject : searchObject) : searchObject, ord)\r\n        .then((response) => {\r\n            setOffset(api.limit)\r\n            console.log(response)\r\n\r\n            if(response.data.data.length < api.limit || response.data.offset + api.limit === response.data.total) {\r\n                console.log(\"shortened\")\r\n                setShowButton(false);\r\n            }\r\n            else {setShowButton(true)}\r\n            response.data.data.forEach(result => {\r\n                result.relationships.forEach(relationship => {\r\n                    if (relationship.type === \"cover_art\") {\r\n                        result[\"coverFile\"] = `https://uploads.mangadex.org/covers/${result.id}/${relationship.attributes.fileName}`;\r\n                    }\r\n                });\r\n            });\r\n            setResponseData(response.data.data);\r\n            setSpinner(false)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n    React.useEffect(()=>{console.log(searchObject);}, [searchObject])\r\n\r\n    const onEnter = e => {\r\n        if (e.key === 'Enter') {\r\n            handleInput();\r\n        }\r\n    }\r\n\r\n    const loadMore = () => {\r\n        setOffset(offset+api.limit)\r\n        setShowButton(true)\r\n        console.log('loading more...')\r\n        api.queryManga({...loadObject, offset:offset})\r\n        .then((response) => {\r\n            if (response.data.data.length < api.limit || response.data.offset + api.limit === response.data.total) {\r\n                setShowButton(false)\r\n            }\r\n            response.data.data.forEach(result => {\r\n                result.relationships.forEach(relationship => {\r\n                    if (relationship.type === \"cover_art\") {\r\n                        result[\"coverFile\"] = `https://uploads.mangadex.org/covers/${result.id}/${relationship.attributes.fileName}`;\r\n                    }\r\n                })\r\n            })\r\n            setResponseData(responseData.concat(response.data.data));\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const checkForExternalQueries = () => {\r\n        if(context.state != null) {\r\n            if(context.state.searchObject != null) {\r\n                    if(context.state.searchObject.rand != null) {\r\n                        handleRand();\r\n                        delete context.state.searchObject.rand;\r\n                    }else{\r\n                        setSearchObject(searchObject => context.state.searchObject);\r\n                        handleInput();\r\n                        delete context.state.searchObject;\r\n                        setSearchObject(initialSearchState)\r\n                    }\r\n                window.history.replaceState({}, document.title)\r\n            }\r\n        }\r\n    }\r\n    React.useEffect(() => {checkForExternalQueries();}, [context])\r\n\r\n    return(\r\n        <div>\r\n            <components.SearchBar\r\n            placeholder=\"Find a Manga!\"\r\n            onChange={handleChange}\r\n            onKeyDown={onEnter}\r\n            onClick={handleInput}\r\n            onClickRand={handleRand}\r\n            />\r\n            {spinner ?\r\n                <components.LoadingSpinner/>\r\n                :\r\n                <Grid container spacing={3}>\r\n                    <Grid item md={12}>\r\n                        <Grid container justifyContent=\"center\" spacing={2}>\r\n                            {responseData.map((item,index) =>(\r\n                            <MangaCard\r\n                                key={index}\r\n                                title={item.attributes.title.en ? item.attributes.title.en : item.attributes.title.jp}\r\n                                img={item.coverFile}\r\n                                description={item.attributes.description.en? item.attributes.description.en.replace(/[^.]*\\[.*/g, ''): ''}\r\n                                id={item.id}\r\n                                relationships={item.relationships}\r\n                                status={item.attributes.status}\r\n                                demographic={item.attributes.publicationDemographic? item.attributes.publicationDemographic :'N/A'}\r\n                                tags={item.attributes.tags}\r\n                            />\r\n                            ))}\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            }\r\n            <Button onClick={loadMore} style={{visibility: showButton ? 'visible' : 'hidden', marginBottom:15}} className={\"button-themed\"}>\r\n                Load More\r\n            </Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction App() {\r\n    const context = useLocation();\r\n    if(context.state === undefined){\r\n        context.state = JSON.parse(localStorage.getItem(\"SEARCH_STATE\"));\r\n        localStorage.removeItem(\"SEARCH_STATE\");\r\n    }\r\n    return (\r\n        <div className={\"search-manga\"}>\r\n            <components.TopBar/>\r\n            <Container style={{marginTop:50}}>\r\n                <SearchBar/>\r\n            </Container>\r\n            <components.AboutUs/>\r\n        </div>\r\n    );\r\n};\r\n \r\nexport default App;\r\n","import React from 'react'\r\nimport api from './api'\r\nimport components from './components/components'\r\nimport {useLocation, useHistory} from 'react-router-dom'\r\nimport './css/MangaInfo.css'\r\nimport {Navbar, Nav, Container, Spinner} from \"react-bootstrap\"\r\nimport {Card,Row, Col} from 'react-bootstrap'\r\nimport ReactPaginate from 'react-paginate';\r\nimport { isTaggedTemplateExpression } from 'typescript'\r\n\r\n\r\nfunction Info(props) {\r\n    const history = useHistory()\r\n\r\n    let author = [], artist = [], themes = [], genres = [], format = [], tagId = [],\r\n        themeId = [], genreId = [], formatId = [], authId = [], artId = [];\r\n\r\n    props.relationships.forEach(element => {\r\n        if(element.type === \"author\"){\r\n\r\n            author.push(element.attributes ? element.attributes.name: 'N/A')\r\n            authId.push(element.id)\r\n        }\r\n        if(element.type === \"artist\"){\r\n            artist.push(element.attributes ? element.attributes.name: 'N/A')\r\n            artId.push(element.id)\r\n        }\r\n    })\r\n    props.tags.forEach(tag => {\r\n        if(tag.attributes.group === \"theme\"){\r\n            themes.push(tag.attributes.name.en)\r\n            themeId.push(tag.id)\r\n        }\r\n        if(tag.attributes.group === \"genre\"){\r\n            genres.push(tag.attributes.name.en)\r\n            genreId.push(tag.id)\r\n            \r\n        }\r\n        if(tag.attributes.group === \"format\"){\r\n            format.push(tag.attributes.name.en)\r\n            tagId.push(tag.id)\r\n            formatId.push(tag.id)\r\n        }\r\n    })\r\n    tagId = themeId.concat(genreId, formatId)\r\n\r\n    const handleSearch = (id, type) => {\r\n        history.push({pathname:\"/\", state:{searchObject: {[type]: [id]}, order:\"followedCount\"}})\r\n    }\r\n\r\n    return(\r\n        <Card className={\"info-card\"}>\r\n            <Row>\r\n                <Col md={3} sm={6}>\r\n                    <Card.Img className={\"rounded\"}  src={props.img}/>\r\n                </Col>\r\n                <Col>\r\n                    <Card.Body variant=\"right\" className=\"card_body\">\r\n                        <Card.Title style={{fontSize:32, marginBottom:10}} className={\"text-color\"}>{props.title}</Card.Title>\r\n                        <Card.Subtitle className={\"text-color\"}>Publication Status:</Card.Subtitle>\r\n                        <Card.Text className={\"text-color\"}>{props.status.charAt(0).toUpperCase() + props.status.slice(1)}</Card.Text>\r\n                        <Card.Subtitle className={\"text-color\"}>Author(s):</Card.Subtitle>\r\n                    \r\n                        {\r\n                        author.map((auth, index) => {\r\n                            return <span onClick={() => handleSearch(authId[index], \"authors\")} key={`demo_snap_${index}`} className={\"text-color\"}>\r\n                                    <span>{(index ? ', ' : '')}</span>\r\n                                    <span className=\"clickable tag\">{auth}</span>\r\n                                </span>\r\n                        })\r\n                        }\r\n                        <div style={{margin:\"1rem\"}}/>\r\n                        <Card.Subtitle className={\"text-color\"}>Artist(s):</Card.Subtitle>\r\n                        {\r\n                        author.map((auth, index) => {\r\n                            return <span onClick={() => handleSearch(artId[index], \"artists\")} key={`demo_snap_${index}`} className={\"text-color\"}>\r\n                                    <span>{(index ? ', ' : '')}</span>\r\n                                    <span className=\"clickable tag\">{auth}</span>\r\n                                </span>\r\n                        })\r\n                        }\r\n                        <div style={{margin:\"1rem\"}}/>\r\n                        <Card.Subtitle className={\"text-color\"}>Description:</Card.Subtitle>\r\n                        <Card.Text className={\"text-color\"}>\r\n                        {props.description}\r\n                        </Card.Text>\r\n                        <Card.Subtitle style={{fontSize:\"smaller\"}} className={\"text-color\"}>Tags:</Card.Subtitle>\r\n                        {\r\n                        themes.concat(genres,format).map( (tag,index) => {\r\n                                return <span   onClick={() => handleSearch(tagId[index], \"includedTags\")} style={{fontSize:\"smaller\"}}key={`demo_snap_${index}`} className={\"text-color\"}>\r\n                                            <span>{(index ? ', ' : '')}</span>\r\n                                            <span className=\"clickable tag\">{tag}</span>\r\n                                        </span>\r\n\r\n                            })\r\n                        }\r\n                    </Card.Body>\r\n                </Col>\r\n            </Row>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction ChapterListNav(props) {\r\n    const context = useLocation();\r\n    const history = useHistory();\r\n    const [chapterList, setChapterList] = React.useState([]);\r\n    const [pageLength, setPageLength] = React.useState(0);\r\n    const [currentPage, setCurrentPage] = React.useState(0);\r\n    const [pageVis, setPageVis] = React.useState(false);\r\n    const [bottomPageVis, setBottomPageVis] = React.useState(false);\r\n    const [noChapters, setNoChapters] = React.useState(false);\r\n    const chapterSort = (a, b) => {\r\n        console.log(a);\r\n        let aChapter = parseFloat(a.data.attributes.chapter), bChapter = parseFloat(b.data.attributes.chapter);\r\n        if(aChapter < bChapter){\r\n            return -1;\r\n        }\r\n        if(aChapter > bChapter){\r\n            return 1;\r\n        }\r\n        return 0;\r\n    };\r\n\r\n    const getChapterList = () => {\r\n        let totalChapters, chaptersFetched = 0, remainingChaptersToFetch, offset = 100, totalOffset = 0;\r\n        setChapterList([]);\r\n        setNoChapters(false);\r\n        api.getChapterList({manga: props.id})\r\n            .then((getChapterListResponse) => {\r\n                console.log(getChapterListResponse);\r\n                if(getChapterListResponse.data.data.length === 0){\r\n                    setNoChapters(true);\r\n                    return;\r\n                }\r\n\r\n                totalChapters = getChapterListResponse.data.total;\r\n                chaptersFetched += getChapterListResponse.data.data.length;\r\n                remainingChaptersToFetch = totalChapters - chaptersFetched;\r\n                totalOffset += offset;\r\n                console.log(\"Total Chapters: \" + (totalChapters) + \"; Chapters Fetched: \" + (chaptersFetched) + \"; Remaining Chapters: \" + (remainingChaptersToFetch) + \";\");\r\n\r\n                getChapterListResponse.data.data.forEach((chapter, index) => {\r\n                    setChapterList(chapterList => [...chapterList, {data:chapter, relationships: chapter.relationships, result:chapter.result, listId:(index)}])\r\n                })\r\n                for(let i = 1; i < Math.ceil(remainingChaptersToFetch / chaptersFetched) + 1; i++){\r\n                    let thisOffset = totalOffset;\r\n                    api.getChapterList({manga: props.id, offset: totalOffset})\r\n                        .then((nextChapterListResponse) => {\r\n                            console.log(nextChapterListResponse);\r\n                            nextChapterListResponse.data.data.forEach((chapter, index) => {\r\n                                setChapterList(chapterList => [...chapterList, {data:chapter, relationships:chapter.relationships, result:chapter.result, listId:(index + thisOffset)}]);\r\n                            })\r\n                        })\r\n                        .catch((error) => {\r\n                            console.log(error);\r\n                        })\r\n                    totalOffset += offset;\r\n                }\r\n                setChapterList(chapterList => chapterList.sort((a,b) => {chapterSort(a,b)}));\r\n\r\n                let pageLengthVal = Math.ceil(getChapterListResponse.data.total/api.ch_limit);\r\n                setPageLength(pageLengthVal);\r\n                if(pageLengthVal >= 1) {\r\n                    setPageVis(true);\r\n                    setBottomPageVis(true);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    };\r\n    React.useEffect(() => {getChapterList();}, []);\r\n\r\n    const handlePageClick = (e) => {\r\n        setBottomPageVis(false)\r\n        const selectedPage = e.selected;\r\n        setCurrentPage(selectedPage)\r\n        setBottomPageVis(true)\r\n    }\r\n    const handleChapterChange = (chapter, history) => {\r\n        history.push({pathname:`/Reader/manga=${props.id}/chapter=${chapter.data.attributes.chapter}`, state:{manga:props.state, curChapter:chapter, chapterList:chapterList}});\r\n    };\r\n    const handleMouseDown = (event, chapter, context) => {\r\n        if(event.button === 1){\r\n            localStorage.setItem(\"READER_STATE\", JSON.stringify({manga:props.state, curChapter:chapter, chapterList:chapterList}))\r\n            window.open(`/Reader/manga=${props.id}/chapter=${chapter.data.attributes.chapter}`)\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {noChapters ?\r\n                <p className={\"text-color\"} style={{marginTop:30}}>No chapters could be found</p>\r\n                :\r\n                (pageVis ?\r\n                    <div>\r\n                        <ReactPaginate\r\n                            previousLabel={\"<\"}\r\n                            nextLabel={\">\"}\r\n                            breakLabel={\"...\"}\r\n                            breakClassName={\"break-me\"}\r\n                            initialPage={0}\r\n                            marginPagesDisplayed={2}\r\n                            pageRangeDisplayed={5}\r\n                            pageCount={pageLength}\r\n                            forcePage={currentPage}\r\n                            containerClassName={(pageVis? \"pagination\" : \"pagination hidden\"  )}\r\n                            onPageChange={handlePageClick}\r\n                            subContainerClassName={\"pages pagination\"}\r\n                            activeClassName={\"active\"}\r\n                            disableInitialCallback={\"true\"}/>\r\n                        <Navbar  className=\"ChapterList\">\r\n                            <Nav className={\"flex-column\"}>\r\n                                {chapterList.slice((currentPage * api.ch_limit),((currentPage * api.ch_limit) + api.ch_limit)).map((chapter, index) => (\r\n                                    <Nav.Item key={index}  onClick={() => handleChapterChange(chapter,  history)} onMouseDown={(event) => handleMouseDown(event, chapter)}>\r\n                                        <Nav.Link className={\"chapter\"}>\r\n                                            {chapter.data.attributes.title !== \"\" ? `Chapter ${chapter.data.attributes.chapter} - ${chapter.data.attributes.title}` :\r\n                                                `Chapter ${chapter.data.attributes.chapter}`}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                ))}\r\n                            </Nav>\r\n                        </Navbar>\r\n                        <ReactPaginate\r\n                            previousLabel={\"<\"}\r\n                            nextLabel={\">\"}\r\n                            breakLabel={\"...\"}\r\n                            breakClassName={\"break-me\"}\r\n                            initialPage={0}\r\n                            marginPagesDisplayed={2}\r\n                            pageRangeDisplayed={5}\r\n                            pageCount={pageLength}\r\n                            forcePage={currentPage}\r\n                            containerClassName={(pageVis && bottomPageVis? \"pagination\" : \"pagination hidden\" )}\r\n                            onPageChange={handlePageClick}\r\n                            subContainerClassName={\"pages pagination\"}\r\n                            activeClassName={\"active\"}\r\n                            disableInitialCallback={\"true\"}/>\r\n                    </div>\r\n                    :\r\n                    <components.LoadingSpinner/>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction ApiInfo(){\r\n    const [loading, setLoading] = React.useState(true)\r\n    const [err, setErr] = React.useState(false)\r\n    const history = useHistory();\r\n\r\n    const [mInfo, setMInfo] = React.useState( {\r\n        description:\"\",\r\n        img:\"\",\r\n        title:\"\",\r\n        status:\"\",\r\n        demographic:\"\",\r\n        relationships:[],\r\n        tags:[]\r\n    })\r\n\r\n    const match = RegExp(\"(\\/Info\\/)(manga=)?(.*)\", \"i\").exec(history.location.pathname)\r\n    const id = match[match.length-1]\r\n\r\n    const loadInfo = () => {\r\n        api.getManga(id)\r\n        .then((response)=>{\r\n            console.log(\"SUCCESS!\")\r\n            setLoading(false)\r\n            setErr(true)\r\n            let im = ''\r\n            const attributes = response.data.data.attributes\r\n            response.data.data.relationships.forEach(relationship => {\r\n                if (relationship.type === \"cover_art\") {\r\n                    im= `https://uploads.mangadex.org/covers/${response.data.data.id}/${relationship.attributes.fileName}`;\r\n                }\r\n            })\r\n            setMInfo({\r\n                description:attributes.description.en? attributes.description.en.replace(/[^.]*\\[.*/g, ''): '',\r\n                img:im,\r\n                title:attributes.title.en? attributes.title.en:attributes.title.jp,\r\n                status:attributes.status,\r\n                demographic:attributes.publicationDemographic? attributes.publicationDemographic: 'N/A',\r\n                relationships:response.data.data.relationships,\r\n                tags:attributes.tags\r\n            })\r\n        })\r\n        .catch((error)=>{\r\n            setLoading(false)\r\n            setErr(false)\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    React.useEffect(() => {loadInfo();}, [])\r\n\r\n\r\n    console.log(loading)\r\n    return(\r\n            <div>\r\n                {\r\n                    loading? \r\n                        <Container align={\"center\"} style={{marginTop:30}}>\r\n                            <Spinner animation={\"border\"} role={\"status\"} className={\"spinner-themed\"}>\r\n                                <span className={\"visually-hidden\"}>Loading...</span>\r\n                            </Spinner>                \r\n                        </Container>\r\n                        :\r\n                        [\r\n                            err?\r\n                                <Container>\r\n                                    <Info\r\n                                    description={mInfo.description}\r\n                                    img={mInfo.img}\r\n                                    title={mInfo.title}\r\n                                    status={mInfo.status}\r\n                                    demographic={mInfo.demographic}\r\n                                    relationships={mInfo.relationships}\r\n                                    tags={mInfo.tags}\r\n                                    />\r\n                                    <ChapterListNav\r\n                                        id = {id}\r\n                                        state={mInfo}\r\n                                    />\r\n                                </Container>\r\n                                :\r\n                                <h3 style={{color:\"var(--text-color)\", marginTop:20}}>Sorry, this page could not be found!</h3>\r\n                        ]\r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\n\r\nfunction MangaInfo() {\r\n    const context = useLocation();\r\n    if(context.state === undefined || context.state === null){\r\n        if (localStorage.getItem(\"MANGAINFO_STATE\") === null){\r\n            return (\r\n                <div className=\"MangaInfo\">\r\n                    <components.TopNavBar/>\r\n                    <ApiInfo/>\r\n                        \r\n                    \r\n                </div>\r\n            )\r\n        }\r\n        context.state = JSON.parse(localStorage.getItem(\"MANGAINFO_STATE\"));\r\n        localStorage.removeItem(\"MANGAINFO_STATE\");\r\n    }\r\n    console.log(\"Entering Manga Info\");\r\n    return (\r\n        <div className=\"MangaInfo\">\r\n\r\n            <components.TopNavBar/>\r\n            <Container>\r\n                <Info\r\n                    description={context.state.description}\r\n                    img={context.state.img}\r\n                    title={context.state.title}\r\n                    status={context.state.status}\r\n                    demographic={context.state.demographic}\r\n                    relationships={context.state.relationships}\r\n                    tags={context.state.tags}\r\n                />\r\n                <ChapterListNav\r\n                    id={context.state.id}\r\n                    state={context.state}\r\n                />\r\n            </Container>\r\n            <components.AboutUs/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MangaInfo;","import React from \"react\";\r\nimport api from \"./api\";\r\nimport {useLocation, useHistory} from \"react-router-dom\";\r\nimport {Container, Image, Navbar, Nav, Button, Form, Row, Col, Tooltip} from \"react-bootstrap\";\r\nimport components from \"./components/components\";\r\nimport { slide as Menu } from \"react-burger-menu\";\r\nimport './css/Reader.css';\r\nimport \"./css/standard_styles.css\"\r\n\r\nfunction FindNextChapter(context){\r\n    // context is the object returned by a call to useLocation()\r\n    if(context.state.curChapter.listId + 1 >= context.state.chapterList.length){\r\n        // If at the end of the current list, return current chapter\r\n        return context.state.curChapter;\r\n    }\r\n    for(let idx = context.state.curChapter.listId + 1; idx < context.state.chapterList.length; idx++){\r\n        // Finds next chapter where chapter number > current chapter number\r\n        if(parseFloat(context.state.chapterList[idx].data.attributes.chapter) > parseFloat(context.state.curChapter.data.attributes.chapter)){\r\n            return context.state.chapterList[idx];\r\n        }\r\n    }\r\n}\r\nfunction FindPrevChapter(context){\r\n    // context is the object returned by a call to useLocation()\r\n    if(context.state.curChapter.listId - 1 < 0){\r\n        // If at the beginning of the current list, return current chapter\r\n        return context.state.curChapter;\r\n    }\r\n    for(let idx = context.state.curChapter.listId - 1; idx >= 0; --idx){\r\n        // Finds next chapter where chapter number < current chapter number\r\n        if(parseFloat(context.state.chapterList[idx].data.attributes.chapter) < parseFloat(context.state.curChapter.data.attributes.chapter)){\r\n            return context.state.chapterList[idx];\r\n        }\r\n    }\r\n}\r\nfunction HandleChapterChange(newChapter, context, history){\r\n    // newChapter is the chapter object which you want to transition to\r\n    // context is the context object which should have the form {manga:{}, curChapter:{}, chapterList:{}}\r\n    // history is the object returned by a call to useHistory()\r\n    history.push({pathname:`/Reader/manga=${context.state.manga.id}/chapter=${newChapter.data.attributes.chapter}`, state:{manga:context.state.manga, curChapter:newChapter, chapterList:context.state.chapterList}});\r\n}\r\nfunction HandleChapterChangeNewTab(event, newChapter, context){\r\n    // event is passed from the DOM event handler\r\n    // newChapter is the chapter object you wish to switch to\r\n    // context is the object returned by a call to useLocation()\r\n    if(event.button === 1){\r\n        localStorage.setItem(\"READER_STATE\", JSON.stringify({manga:context.state.manga, curChapter:newChapter, chapterList:context.state.chapterList}));\r\n        window.open(`/Reader/manga=${context.state.manga.id}/chapter=${newChapter.data.attributes.chapter}`);\r\n    }\r\n}\r\nfunction goToMangaInfo(context, history){\r\n    history.push({pathname:`/Info/manga=${context.state.manga.id}`, state:context.state.manga});\r\n}\r\nfunction goToMangaInfoNewTab (event, context){\r\n    if(event.button === 1){\r\n        localStorage.setItem(\"MANGAINFO_STATE\", JSON.stringify(context.state.manga));\r\n        window.open(`/Info/manga=${context.state.manga.id}`);\r\n    }\r\n}\r\n\r\nfunction ChapterImages() {\r\n    const context = useLocation();\r\n    const history = useHistory();\r\n    const [chapterImgUrlList, setChapterImgUrlList] = React.useState([]);\r\n    const [isScroll, setIsScroll] = React.useState(localStorage.getItem(\"IS_SCROLL\") === \"true\" ? true : false);\r\n    React.useEffect(() => {localStorage.setItem(\"IS_SCROLL\", isScroll ? \"true\" : \"false\");}, [isScroll]);\r\n    const [curPage, setCurPage] = React.useState(0);\r\n    const defaultZoom = 1.0;\r\n    const [scrollZoom, setScrollZoom] = React.useState(defaultZoom);\r\n    const [pageZoom, setPageZoom] = React.useState(defaultZoom);\r\n    const [showZoom, setShowZoom] = React.useState(false);\r\n    const vw = Math.min(document.documentElement.clientWidth || 0, window.innerWidth || 0);\r\n    const vh = Math.min(document.documentElement.clientWidth || 0, window.innerHeight || 0);\r\n    let pageZoomVal = pageZoom, scrollZoomVal = scrollZoom;\r\n\r\n    const getChapterImages = (chapterId) => {\r\n        setChapterImgUrlList([]);\r\n        setCurPage(0);\r\n        api.getBaseUrl(chapterId)\r\n            .then((getBaseUrlResponse) => {\r\n                console.log(getBaseUrlResponse)\r\n                context.state.curChapter.data.attributes.data.forEach((chapterImg, index) => {\r\n                    setChapterImgUrlList(chapterImgUrlList => [...chapterImgUrlList, {url:api.getChapterImgUrl(getBaseUrlResponse.data.baseUrl, 'data', context.state.curChapter.data.attributes.hash, chapterImg), index:index}]);\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    React.useLayoutEffect(() => {getChapterImages(context.state.curChapter.data.id);}, [context]);\r\n\r\n    const toggleScroll = () => {\r\n        setIsScroll(!isScroll);\r\n    };\r\n    function ZoomBar(){\r\n        // TODO : Add tooltip to display value of zoom\r\n        // TODO : Add fade in/out animations and delays to the mouse over effects\r\n        //        Probably want to do that with some CSS fuckery\r\n        const zoomToolTip = () => {\r\n            return (\r\n                <Tooltip id={\"zoom-bar-tooltip\"}>\r\n                    {isScroll ? scrollZoomVal : pageZoomVal}\r\n                </Tooltip>\r\n            );\r\n        }\r\n        const handleChange = (event) => {\r\n            console.log(event.target.value);\r\n            if(isScroll){\r\n                setScrollZoom(parseFloat(event.target.value));\r\n                scrollZoomVal = parseFloat(event.target.value);\r\n            }\r\n            else{\r\n                setPageZoom(parseFloat(event.target.value));\r\n                pageZoomVal = parseFloat(event.target.value);\r\n            }\r\n        };\r\n        const resetZoom = () => {\r\n            isScroll ? setScrollZoom(defaultZoom) : setPageZoom(defaultZoom);\r\n        };\r\n        const toggleZoomOn = () => {\r\n            setShowZoom(true);\r\n        };\r\n        const toggleZoomOff = () => {\r\n            setShowZoom(false);\r\n        };\r\n        const toggleZoom = () => {\r\n            setShowZoom(!showZoom);\r\n        };\r\n\r\n        return (\r\n            <div className={\"position-relative bottom-0\"} /*onMouseEnter={toggleZoomOn} onMouseLeave={toggleZoomOff}*/ style={{marginTop:30}}>\r\n                <Button className={\"fixed-bottom button-themed\"} style={{marginBottom:35, marginLeft:10}} onClick={() => toggleZoom()}>{showZoom ? \"Hide Zoom\" : \"Show Zoom\"}</Button>\r\n                <Container className={\"fixed-bottom\"} style={{marginBottom:35}}>\r\n                    <Navbar className={\"flex-fill rounded-3 zoom-bar\"} style={{visibility: showZoom ? \"visible\" : \"hidden\"}}>\r\n                        <Form className={\"flex-fill\"} style={{marginLeft:10, marginRight:10}}>\r\n                            <Form.Label>Zoom</Form.Label>\r\n                            <Form.Range min={\"0.1\"} max={\"1.9\"} defaultValue={isScroll ? scrollZoomVal : pageZoomVal} step={\"0.05\"} onChange={handleChange} id={\"zoom\"} name={\"zoom\"} tooltip={\"auto\"}/>\r\n                            <Button className={\"button-themed\"} onClick={resetZoom}>Reset</Button>\r\n                        </Form>\r\n                    </Navbar>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n    function ChapterScroll() {\r\n        // This function will handle the rendering of the scroll version of the chapter\r\n        React.useEffect(() => {document.getElementById(\"reader-window-scroll\").scrollIntoView();}, []);\r\n        const handleClick = (event, index) => {\r\n            const clickableWidth = document.getElementById(`scroll-frame-${index}`).clientWidth;\r\n            const threshold = clickableWidth / 2;\r\n            if(event.clientX < threshold && index > 0){\r\n                document.getElementById(`panelImage_${index - 1}`).scrollIntoView();\r\n            }\r\n            else if(event.clientX > threshold && index < chapterImgUrlList.length - 1) {\r\n                document.getElementById(`panelImage_${index + 1}`).scrollIntoView();\r\n            }\r\n            else if(event.clientX > threshold && index === chapterImgUrlList.length - 1){\r\n                HandleChapterChange(FindNextChapter(context), context, history);\r\n            }\r\n            if(event.clientX < threshold && index === 0){\r\n                HandleChapterChange(FindPrevChapter(context), context, history);\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div id={\"reader-window-scroll\"}>\r\n                {chapterImgUrlList.length !== 0 ?\r\n                    <Row xs={1} md={1} lg={1}>\r\n                        {chapterImgUrlList.map((chapterImg, index) => (\r\n                            <Col key={index} onClick={(event) => {handleClick(event, index)}} id={`scroll-frame-${index}`}>\r\n                                <Image src={chapterImg.url} key={index} alt={\"Not Found\"} id={`panelImage_${index}`}\r\n                                       style={{height: `${(vh * scrollZoom)}px`, width: \"auto\", userSelect:\"none\"}}\r\n                                       className={\"border-start border-end border-dark\"}/>\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                    :\r\n                    <components.LoadingSpinner/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n    function ChapterProgress(){\r\n        // TODO : Add fade in/out animations and delays to the mouse over effects\r\n        //        Probably want to do that with some CSS fuckery\r\n        const [showProgress, setShowProgress] = React.useState(false);\r\n        const toggleProgressOn = () => {\r\n            setShowProgress(true);\r\n        };\r\n        const toggleProgressOff = () => {\r\n            setShowProgress(false);\r\n        };\r\n        return (\r\n            <div className={\"position-relative\"} onMouseEnter={() => {toggleProgressOn()}} onMouseLeave={() => {toggleProgressOff()}}>\r\n                <Container fluid className={\"reader-progress-bar fixed-bottom\"}>\r\n                    <Navbar expand={\"lg\"} style={{visibility: showProgress ? \"visible\" : \"hidden\"}}>\r\n                        {chapterImgUrlList.map((chapter, index) => {\r\n                            return (\r\n                                <Nav key={index} className={\"flex-fill\"}>\r\n                                    <Button onClick={() => setCurPage(index)} className={`align-self-center w-100 ${index <= curPage ? \"button-themed\" : \"button-themed-outline\"}`}>\r\n                                        <span className={\"visually-hidden\"}>Page {index}</span>\r\n                                    </Button>\r\n                                </Nav>\r\n                            )\r\n                        })}\r\n                    </Navbar>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n    function ChapterClick() {\r\n        // This function will handle the rendering of the click version of the chapter\r\n        React.useEffect(() => {document.getElementById(\"reader-window\").scrollIntoView();}, []);\r\n        document.onkeydown = checkKey;\r\n        function checkKey(e) {\r\n            //e = e || window.event;\r\n            if (e.keyCode === '37' && !e.ctrlKey) {\r\n               // left arrow\r\n               prevImage()\r\n            }\r\n            else if (e.keyCode === '39' && !e.ctrlKey) {\r\n               // right arrow\r\n               nextImage()\r\n            }\r\n        }\r\n\r\n        const handleClick = (event) => {\r\n            const clickableWidth = document.getElementById(\"reader-clickable\").clientWidth;\r\n            const threshold = clickableWidth / 2;\r\n            if(event.clientX < threshold){\r\n                prevImage();\r\n            }\r\n            else if(event.clientX > threshold) {\r\n                nextImage();\r\n            }\r\n        };\r\n        const nextImage = () => {\r\n            if(chapterImgUrlList[curPage].index < chapterImgUrlList.length - 1){\r\n                console.log(\"Going to page: \" + (chapterImgUrlList[curPage].index + 1));\r\n                setCurPage(curPage + 1);\r\n            }\r\n            else {\r\n                // Go to next chapter because we are at the end of the current\r\n                HandleChapterChange(FindNextChapter(context),context, history);\r\n            }\r\n        };\r\n        const prevImage = () => {\r\n            if(chapterImgUrlList[curPage].index > 0){\r\n                console.log(\"Going to page: \" + (chapterImgUrlList[curPage].index - 1));\r\n                setCurPage(curPage - 1);\r\n            }\r\n            else {\r\n                // Go to previous chapter since we are at the beginning of the current\r\n                HandleChapterChange(FindPrevChapter(context),context, history);\r\n            }\r\n        };\r\n\r\n        // <div id={\"reader-window\"} className={\"min-vh-100 vh-100\"} onClick={(event) => {handleClick(event);}}>\r\n        //     <Container id={\"reader-clickable\"} className={\"position-relative reader-window\"} fluid >\r\n        //         {chapterImgUrlList[curPage] != undefined ?\r\n        //             <div>\r\n        //                 <Image src={chapterImgUrlList[curPage].url} alt={\"Not Found\"} id={`panelImage_${curPage}`}\r\n        //                        style={{height: `${(vh * pageZoom)}px`, width: \"auto\"}}\r\n        //                        className={\"border border-dark mw-100 mh-100\"}/>\r\n        //             </div>\r\n        //             :\r\n        //             <components.LoadingSpinner/>\r\n        //         }\r\n        //     </Container>\r\n        // </div>\r\n\r\n        return (\r\n            <div id={\"reader-window\"} className={\"min-vh-100 vh-100\"} onClick={(event) => {handleClick(event);}}>\r\n                <Container id={\"reader-clickable\"} className={\"position-relative reader-window\"} fluid>\r\n                    {chapterImgUrlList.length !== 0 ?\r\n                        <div>\r\n                            {chapterImgUrlList.map((chapterImg, index) => (\r\n                                <Image src={chapterImg.url} key={index} alt={\"Not Found\"} id={`panelImage_${index}`}\r\n                                       style={{height: `${(vh * pageZoom)}px`}}\r\n                                       className={`border border-dark image-click ${index === curPage ? \"visible\" : \"invisible\"}`}/>\r\n                            ))}\r\n                        </div>\r\n                        :\r\n                        <components.LoadingSpinner/>\r\n                    }\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div style={{marginTop:10}}>\r\n            <Container className={\"position-relative\"} style={{marginBottom:10}}>\r\n                <Button onClick={() => goToMangaInfo(context, history)} onMouseDown={(event) => goToMangaInfoNewTab(event, context)} className={\"position-absolute start-0 button-themed\"}>Back to MangaInfo</Button>\r\n                <Button className={isScroll ? \"btn-secondary\" : \"button-themed\"} style={{textAlign:\"center\"}} onClick={() => toggleScroll()}>{isScroll ? \"Switch to Page\" : \"Switch to Scroll\"}</Button>\r\n            </Container>\r\n            {isScroll ?\r\n                <div id={\"reader_scroll\"}>\r\n                    <ChapterScroll/>\r\n                    <div style={{margin:10}}/>\r\n                    <NextChapterButtons/>\r\n                </div>\r\n                :\r\n                <div id={\"reader_click\"}>\r\n                    <ChapterClick/>\r\n                    <ChapterProgress/>\r\n                </div>\r\n            }\r\n            <ZoomBar/>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction NextChapterButtons() {\r\n    const context = useLocation();\r\n    const history = useHistory();\r\n    return (\r\n        <div className={\"button-chapter-nav\"}>\r\n            <Button style={{marginRight: 10}} onClick={() => HandleChapterChange(FindPrevChapter(context), context, history)} onMouseDown={(event) => HandleChapterChangeNewTab(event, FindPrevChapter(context), context)} className={\"button-themed prev\"}>\r\n                Prev Chapter\r\n            </Button>\r\n            <Button onClick={() => HandleChapterChange(FindNextChapter(context), context, history)} onMouseDown={(event) => HandleChapterChangeNewTab(event, FindNextChapter(context), context)} className={\"button-themed next\"}>\r\n                Next Chapter\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction ChapterListHamburgerMenu() {\r\n    const context = useLocation();\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <Menu right  pageWrapId={\"page-wrap\"} outerContainerId={\"App\"}>\r\n                <Navbar  className=\"ChapterList\">\r\n                    <Nav className={\"flex-column\"} activeKey={context.state.curChapter.data.listId}>\r\n                        <Nav.Item as={\"h5\"} className={\"text-color clickable\"} onClick={() => {goToMangaInfo(context, history);}}>{context.state.manga.title}</Nav.Item>\r\n                        <div style={{margin:10}}/>\r\n                        {context.state.chapterList.map((chapter, index) => (\r\n                            <Nav.Item key={index} onClick={() => HandleChapterChange(chapter, context, history)}>\r\n                                <Nav.Link eventKey={index} className={\"chapter\"}>\r\n                                        {chapter.data.attributes.title !== \"\" ? `Chapter ${chapter.data.attributes.chapter} - ${chapter.data.attributes.title}` :\r\n                                            `Chapter ${chapter.data.attributes.chapter}`}\r\n                                </Nav.Link>\r\n                            </Nav.Item>\r\n                        ))}\r\n                    </Nav>\r\n                </Navbar>\r\n            </Menu>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Reader() {\r\n    const context = useLocation();\r\n    const [history, setHistory] = React.useState(useHistory());\r\n    if(context.state === undefined){\r\n        context.state = JSON.parse(localStorage.getItem(\"READER_STATE\"));\r\n        localStorage.removeItem(\"READER_STATE\");\r\n    }\r\n    React.useEffect(()=> console.log(context),[context]);\r\n    return (\r\n        <div className={\"reader\"} id=\"App\">\r\n            <ChapterListHamburgerMenu/>\r\n            <div id=\"page-wrap\">\r\n                <components.TopNavBar/>\r\n                <Container fluid>\r\n                    <h1 className={\"text-themed\"}>\r\n                        {context.state.manga.title}\r\n                        : Chapter\r\n                        {` ` + context.state.curChapter.data.attributes.chapter}\r\n\r\n                        {context.state.curChapter.data.attributes.title !== \"\" ?\r\n                            ` - ${context.state.curChapter.data.attributes.title}`\r\n                            :\r\n                            ``\r\n                        }\r\n                    </h1>\r\n                    <NextChapterButtons/>\r\n                    <ChapterImages/>\r\n                </Container>\r\n            </div>\r\n            <components.AboutUs/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reader;","import React from 'react'\r\nimport components from \"./components/components\";\r\nimport \"./css/css_globals.css\"\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div align={\"center\"}>\r\n            <components.TopNavBar/>\r\n            <h3 style={{color:\"var(--text-color)\", marginTop:20}}>Sorry, this page could not be found!</h3>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport api from \"./api\";\r\nimport components from \"./components/components\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport \"./css/AdvancedSearch.css\";\r\nimport \"./css/standard_styles.css\";\r\nimport {Container, Button, Form, Row, Col} from \"react-bootstrap\";\r\n\r\nfunction AdvancedSearchFields() {\r\n    const initialSearchState = {\r\n        title:\"\",\r\n        status:[],\r\n        publicationDemographic:[],\r\n        includedTags:[],\r\n        excludedTags:[],\r\n        contentRating:[]\r\n    };\r\n    const history = useHistory();\r\n    const [genreTags, setGenreTags] = React.useState([]);\r\n    const [themeTags, setThemeTags] = React.useState([]);\r\n    const [formatTags, setFormatTags] = React.useState([]);\r\n    const [contentTags, setContentTags] = React.useState([]);\r\n    const [tagsFetched, setTagsFetched] = React.useState(false);\r\n    const [searchObject, setSearchObject] = React.useState(initialSearchState);\r\n    React.useEffect(()=>{console.log(searchObject)},[searchObject]);\r\n\r\n    const getAllTags = () => {\r\n        // This function grabs all the tags from the api then sorts each tag into its own hook depending on the type\r\n        setGenreTags([]);\r\n        setThemeTags([]);\r\n        setFormatTags([]);\r\n        setContentTags([]);\r\n        api.getTags()\r\n            .then((response) => {\r\n                console.log(response);\r\n                response.data.data.forEach((tag) => {\r\n                    switch (tag.attributes.group) {\r\n                        case \"genre\":\r\n                            setGenreTags(genreTags => [...genreTags, {\r\n                                group:tag.attributes.group,\r\n                                name:tag.attributes.name.en,\r\n                                id:tag.id,\r\n                                type:tag.type}]);\r\n                            break;\r\n                        case \"theme\":\r\n                            setThemeTags(themeTags => [...themeTags, {\r\n                                group:tag.attributes.group,\r\n                                name:tag.attributes.name.en,\r\n                                id:tag.id,\r\n                                type:tag.type}]);\r\n                            break;\r\n                        case \"format\":\r\n                            setFormatTags(formatTags => [...formatTags, {\r\n                                group:tag.attributes.group,\r\n                                name:tag.attributes.name.en,\r\n                                id:tag.id,\r\n                                type:tag.type}]);\r\n                            break;\r\n                        case \"content\":\r\n                            setContentTags(contentTags => [...contentTags, {\r\n                                group:tag.attributes.group,\r\n                                name:tag.attributes.name.en,\r\n                                id:tag.id,\r\n                                type:tag.type}]);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                })\r\n                setGenreTags(genreTags => genreTags.sort(function(a,b){\r\n                    let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                    if(aName < bName){\r\n                        return -1;\r\n                    }\r\n                    if(aName > bName){\r\n                        return 1;\r\n                    }\r\n                        return 0;\r\n                }));\r\n                setThemeTags(themeTags => themeTags.sort(function(a,b){\r\n                    let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                    if(aName < bName){\r\n                        return -1;\r\n                    }\r\n                    if(aName > bName){\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }));\r\n                setFormatTags(formatTags => formatTags.sort(function(a,b){\r\n                    let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                    if(aName < bName){\r\n                        return -1;\r\n                    }\r\n                    if(aName > bName){\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }));\r\n                setContentTags(contentTags => contentTags.sort(function(a,b){\r\n                    let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                    if(aName < bName){\r\n                        return -1;\r\n                    }\r\n                    if(aName > bName){\r\n                        return 1;\r\n                    }\r\n                    return 0;\r\n                }));\r\n                setTagsFetched(true);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    };\r\n    React.useLayoutEffect(() => {getAllTags();}, []);\r\n    const handleTitleChange = (event) => {\r\n        // Sets the title field of the searchObject\r\n        setSearchObject({...searchObject, [event.target.name]: event.target.value});\r\n    };\r\n    const handleStatusChange = (event) => {\r\n        // Functions with this signature append and remove checkbox ticks from their respective searchObject arrays\r\n        if(event.target.checked) {\r\n            setSearchObject({...searchObject, status: [...searchObject.status, event.target.name ]});\r\n        }\r\n        else {\r\n            setSearchObject({...searchObject, status: searchObject.status.filter((item) => item !== event.target.name)});\r\n        }\r\n\r\n    };\r\n    const handleDemoChange = (event) => {\r\n        if(event.target.checked) {\r\n            setSearchObject({...searchObject, publicationDemographic: [...searchObject.publicationDemographic, event.target.name ]});\r\n        }\r\n        else {\r\n            setSearchObject({...searchObject, publicationDemographic: searchObject.publicationDemographic.filter((item) => item !== event.target.name)});\r\n        }\r\n    };\r\n    const handleContentChange = (event) => {\r\n        if(event.target.checked) {\r\n            setSearchObject({...searchObject, contentRating: [...searchObject.contentRating, event.target.name ]});\r\n        }\r\n        else {\r\n            setSearchObject({...searchObject, contentRating: searchObject.contentRating.filter((item) => item !== event.target.name)});\r\n        }\r\n    };\r\n    const handleIncludedTagChange = (event) => {\r\n        if(event.target.checked) {\r\n            setSearchObject({...searchObject, includedTags: [...searchObject.includedTags, event.target.getAttribute(\"tagid\")]})\r\n        }\r\n        else {\r\n            setSearchObject({...searchObject, includedTags: searchObject.includedTags.filter((item) => item !== event.target.getAttribute(\"tagid\"))});\r\n        }\r\n    };\r\n    const handleExcludedTagChange = (event) => {\r\n        if(event.target.checked) {\r\n            setSearchObject({...searchObject, excludedTags: [...searchObject.excludedTags, event.target.getAttribute(\"tagid\")]})\r\n        }\r\n        else {\r\n            setSearchObject({...searchObject, excludedTags: searchObject.excludedTags.filter((item) => item !== event.target.getAttribute(\"tagid\"))});\r\n        }\r\n    };\r\n    const handleSubmit = () => {\r\n        // This function sends us to the search results page with the newly assembled searchObject\r\n        history.push({pathname:`/`, state:{searchObject: {...searchObject}}});\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Form onSubmit={handleSubmit}>\r\n                <Form.Group  controlId={\"title\"}>\r\n                    <Form.Label>Title</Form.Label>\r\n                    <Form.Control className={\"search-bar-field\"} type={\"text\"} name={\"title\"} placeholder={\"Title\"} onChange={handleTitleChange}/>\r\n                </Form.Group>\r\n                <Row>\r\n                    <Form.Group controlId={\"status\"} as={Col}>\r\n                        <Form.Label>Status</Form.Label>\r\n                        <Form.Check type={\"checkbox\"} label={\"Ongoing\"} name={\"ongoing\"} id={\"ongoing\"} onChange={handleStatusChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Hiatus\"} name={\"hiatus\"} id={\"hiatus\"} onChange={handleStatusChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Completed\"} name={\"completed\"} id={\"completed\"} onChange={handleStatusChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Cancelled\"} name={\"cancelled\"} id={\"cancelled\"} onChange={handleStatusChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId={\"demo\"} as={Col}>\r\n                        <Form.Label>Demographics</Form.Label>\r\n                        <Form.Check type={\"checkbox\"} label={\"Shounen\"} name={\"shounen\"} id={\"shounen\"} onChange={handleDemoChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Shoujo\"} name={\"shoujo\"} id={\"shoujo\"} onChange={handleDemoChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Seinen\"} name={\"seinen\"} id={\"seinen\"} onChange={handleDemoChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Josei\"} name={\"josei\"} id={\"josei\"} onChange={handleDemoChange}/>\r\n                    </Form.Group>\r\n                    <Form.Group controlId={\"content\"} as={Col}>\r\n                        <Form.Label>Content</Form.Label>\r\n                        <Form.Check type={\"checkbox\"} label={\"Safe\"} name={\"safe\"} id={\"safe\"} onChange={handleContentChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Suggestive\"} name={\"suggestive\"} id={\"suggestive\"} onChange={handleContentChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Erotica\"} name={\"erotica\"} id={\"erotica\"} onChange={handleContentChange}/>\r\n                        <Form.Check type={\"checkbox\"} label={\"Pornographic\"} name={\"pornographic\"} id={\"pornographic\"} onChange={handleContentChange}/>\r\n                    </Form.Group>\r\n                </Row>\r\n                <br/>\r\n                {/*This block is used to conditionally render a spinner before all of the tag data is loaded from the api*/}\r\n                {tagsFetched ?\r\n                    <Form.Group controlId={\"tags\"}>\r\n                        <Form.Group controlId={\"includedTags\"}>\r\n                            <p>Include these tags:</p>\r\n                            <Form.Group controlId={\"includedGenreTags\"}>\r\n                                <Form.Label>Genres</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {genreTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleIncludedTagChange} label={tag.name} name={tag.name} id={\"included\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group><br/>\r\n                            <Form.Group controlId={\"includedThemeTags\"}>\r\n                                <Form.Label>Themes</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {themeTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleIncludedTagChange} label={tag.name} name={tag.name} id={\"included\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group><br/>\r\n                            <Form.Group controlId={\"includedFormatTags\"}>\r\n                                <Form.Label>Formats</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {formatTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleIncludedTagChange} label={tag.name} name={tag.name} id={\"included\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group><br/>\r\n                            <Form.Group controlId={\"includedContentTags\"}>\r\n                                <Form.Label>Content</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {contentTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleIncludedTagChange} label={tag.name} name={tag.name} id={\"included\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                        <br/><br/>\r\n                        <Form.Group controlId={\"excludedTags\"}>\r\n                            <p>Exclude these tags:</p>\r\n                            <Form.Group controlId={\"excludedGenreTags\"}>\r\n                                <Form.Label>Genres</Form.Label><br/>\r\n                                    <Row lg={\"10\"}>\r\n                                        {genreTags.sort(function(a,b){\r\n                                            let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                            if(aName < bName){\r\n                                                return -1;\r\n                                            }\r\n                                            if(aName > bName){\r\n                                                return 1;\r\n                                            }\r\n                                            return 0;\r\n                                        }).map((tag, index) => {\r\n                                            return (\r\n                                                <Col lg={\"2\"} key={index}>\r\n                                                    <Form.Check inline key={index} type={\"checkbox\"} onChange={handleExcludedTagChange} label={tag.name} name={tag.name} id={\"excluded\" + tag.name} tagid={tag.id}/>\r\n                                                </Col>\r\n                                            );\r\n                                        })}\r\n                                    </Row>\r\n                            </Form.Group><br/>\r\n                            <Form.Group controlId={\"excludedThemeTags\"}>\r\n                                <Form.Label>Themes</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {themeTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleExcludedTagChange} label={tag.name} name={tag.name} id={\"excluded\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group><br/>\r\n                            <Form.Group controlId={\"excludedFormatTags\"}>\r\n                                <Form.Label>Formats</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {formatTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleExcludedTagChange} label={tag.name} name={tag.name} id={\"excluded\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group><br/>\r\n                            <Form.Group controlId={\"excludedContentTags\"}>\r\n                                <Form.Label>Content</Form.Label><br/>\r\n                                <Row lg={\"10\"}>\r\n                                    {contentTags.sort(function(a,b){\r\n                                        let aName = a.name.toUpperCase(), bName = b.name.toUpperCase();\r\n                                        if(aName < bName){\r\n                                            return -1;\r\n                                        }\r\n                                        if(aName > bName){\r\n                                            return 1;\r\n                                        }\r\n                                        return 0;\r\n                                    }).map((tag, index) => {\r\n                                        return (\r\n                                            <Col lg={\"2\"} key={index}>\r\n                                                <Form.Check inline key={index} type={\"checkbox\"} onChange={handleExcludedTagChange} label={tag.name} name={tag.name} id={\"excluded\" + tag.name} tagid={tag.id}/>\r\n                                            </Col>\r\n                                        );\r\n                                    })}\r\n                                </Row>\r\n                            </Form.Group>\r\n                        </Form.Group>\r\n                    </Form.Group>\r\n                    :\r\n                    <components.LoadingSpinner/>\r\n                }\r\n                <br/>\r\n                <div className={\"d-grid\"}>\r\n                    <Button className={\"button-themed\"} type={\"submit\"} size={\"lg\"}>Search</Button>\r\n                </div>\r\n                <br/>\r\n                <br/>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AdvancedSearch() {\r\n    return (\r\n        <div className={\"AdvancedSearch\"}>\r\n            <Container>\r\n                <components.TopBar/>\r\n                <AdvancedSearchFields/>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdvancedSearch;","import React from \"react\";\r\nimport components from \"./components/components\";\r\nimport \"./css/standard_styles.css\"\r\nimport \"./css/About.css\"\r\nimport {Container, Card, ListGroup} from \"react-bootstrap\";\r\n\r\n\r\n// TODO : Put about us information here and a way to route to this page\r\n//      Probably want contact info, what this is, why we made it, etc...\r\nfunction About() {\r\n    return (\r\n        <div className={\"About\"}>\r\n            <components.TopNavBar/>\r\n            <Container className={\"position-relative\"}>\r\n                <h1 className={\"text-center\"} style={{marginTop: 10, color:\"var(--text-color)\"}}>About Us!</h1>\r\n                {/*TODO : Put info for each dev in here, links to social profiles, etc...*/}\r\n                {/*            Does Danathan want his name on this?*/}\r\n                <Card className={\"dev-card\"}>\r\n                    <Card.Title className={\"\"}>Cole Nicholson-Rubidoux</Card.Title>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            Hello, I am a recent graduate from Sonoma State University with a Bachelor's Degree in\r\n                            Computer Science. I have been programming for about 5 years as of October 2021 and have\r\n                            gained familiarity in most of the common programming languages as well as some more esoteric\r\n                            ones. We decided to make this app when the MangaDex site went down and there was no decent\r\n                            place to read manga. So we took this opportunity to learn a web design framework (React\r\n                            in this case) and build something which would be both fun and bolster our resumes. If you\r\n                            want to report a bug, request a feature, or contact me for other reasons, feel free to\r\n                            send me an email at the link below. I have also included links to my LinkedIn and Github\r\n                            accounts for those that might want to check out my other work. Thank you for using our site!\r\n                        </Card.Text>\r\n                        <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <Card.Link onClick={(event) => {window.open(`mailto:cnicholsonrubidoux@gmail.com`, `mail`); event.preventDefault()}} href={`mailto:cnicholsonrubidoux@gmail.com`}>\r\n                                    CNicholsonRubidoux@Gmail.com\r\n                                </Card.Link>\r\n                                <Card.Link href={`https://www.linkedin.com/in/cole-nicholson-rubidoux-761922160/`} target={\"_blank\"}>\r\n                                    LinkedIn\r\n                                </Card.Link>\r\n                                <Card.Link href={`https://github.com/ColeNicholson`} target={\"_blank\"}>\r\n                                    Github\r\n                                </Card.Link>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n                <div style={{margin: 10}}/>\r\n                <Card className={\"dev-card\"}>\r\n                    <Card.Title className={\"\"}>Andrew Pham</Card.Title>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            Hi and welcome to our site! My name Andrew and I am a recent graduate from University of California,\r\n                            Irvine with a Bachelor's Degree in Computer Science. During my studies at UCI I specialized in \r\n                            information, which pertains to information retrieval, database management systems, and machine learning.\r\n                            Though I had little front end knowledge prior to this project, I found it a great opportunity to expand\r\n                            my tech stack as well as working with a hobby of mine. Feel free to reach out at my email or LinkedIn \r\n                            located below.\r\n                        </Card.Text>\r\n                    <ListGroup>\r\n                            <ListGroup.Item>\r\n                                <Card.Link onClick={(event) => {window.open(`mailto:andrewpham288@gmail.com`, `mail`); event.preventDefault()}} href={`mailto:cnicholsonrubidoux@gmail.com`}>\r\n                                    Andrewpham288@gmail.com\r\n                                </Card.Link>\r\n                                <Card.Link href={`https://www.linkedin.com/in/andrew-huy-pham/`} target={\"_blank\"}>\r\n                                    LinkedIn\r\n                                </Card.Link>\r\n                                <Card.Link href={`https://github.com/andrew-pham99`} target={\"_blank\"}>\r\n                                    Github\r\n                                </Card.Link>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport App from \"./App\"\r\nimport MangaInfo from \"./MangaInfo\"\r\nimport Reader from \"./Reader\"\r\nimport NotFound from \"./NotFound\"\r\nimport AdvancedSearch from \"./AdvancedSearch\";\r\nimport About from \"./About\"\r\n\r\nexport default function Routes() {\r\n    return (\r\n      <Switch>\r\n          <Route exact path={`/`}>\r\n              <App/>\r\n          </Route>\r\n          <Route exact path={`/AdvancedSearch`}>\r\n              <AdvancedSearch/>\r\n          </Route>\r\n          <Route path={`/Info/:manga`}>\r\n              <MangaInfo/>\r\n          </Route>\r\n          <Route path={`/Reader/:manga/:chapter`}>\r\n              <Reader/>\r\n          </Route>\r\n          <Route path={`/About`}>\r\n              <About/>\r\n          </Route>\r\n          <Route>\r\n              <NotFound/>\r\n          </Route>\r\n      </Switch>\r\n    );\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './css/index.css';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Routes from \"./Routes\";\r\n\r\n\r\nReactDOM.render(\r\n  \r\n  <React.StrictMode>\r\n      <Router>\r\n        <Routes/>\r\n      </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 66;"],"sourceRoot":""}